{"ast":null,"code":"import _classCallCheck from \"/Users/instantfred/Projects/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/instantfred/Projects/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/instantfred/Projects/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/instantfred/Projects/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/instantfred/Projects/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/instantfred/Projects/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/StorePicker.js\";\n// its a good practice to name the components with the same class name\n// we'll always need to import react into our components\nimport React from 'react'; // every component is a class, component are basically elements the have the potencial to be repeated in the web page\n\nvar StorePicker =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(StorePicker, _React$Component);\n\n  function StorePicker() {\n    _classCallCheck(this, StorePicker);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StorePicker).apply(this, arguments));\n  }\n\n  _createClass(StorePicker, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        className: \"store-selector\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 10\n        },\n        __self: this\n      }, \"Please enter a store\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        placeholder: \"Store name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, \"Visit Store\"));\n    }\n  }]);\n\n  return StorePicker;\n}(React.Component); // we need to export the component so that it is usable outside its own scope\n\n\nexport default StorePicker;","map":{"version":3,"sources":["/Users/instantfred/Projects/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/StorePicker.js"],"names":["React","StorePicker","Component"],"mappings":";;;;;;AAAA;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;IACMC,W;;;;;;;;;;;;;6BACI;AACN,aACE;AAAM,QAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,MAA3B;AAA4B,QAAA,WAAW,EAAC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHF,CADF;AAOD;;;;EATuBD,KAAK,CAACE,S,GAYhC;;;AACA,eAAeD,WAAf","sourcesContent":["// its a good practice to name the components with the same class name\n// we'll always need to import react into our components\nimport React from 'react';\n\n// every component is a class, component are basically elements the have the potencial to be repeated in the web page\nclass StorePicker extends React.Component {\n  render(){\n    return (\n      <form className='store-selector'>\n        <h2>Please enter a store</h2>\n        <input type='text' required placeholder='Store name' />\n        <button type='submit'>Visit Store</button>\n      </form>\n    )\n  }\n}\n\n// we need to export the component so that it is usable outside its own scope\nexport default StorePicker;"]},"metadata":{},"sourceType":"module"}